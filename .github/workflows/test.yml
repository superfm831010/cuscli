name: Checker Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'autocoder/checker/**'
      - 'tests/checker/**'
      - 'pytest.ini'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'autocoder/checker/**'
      - 'tests/checker/**'
      - 'pytest.ini'

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-mock pytest-timeout
        pip install -r requirements.txt || true

    - name: Run unit tests
      run: |
        pytest tests/checker/ -v -m unit \
          --cov=autocoder/checker \
          --cov-report=xml \
          --cov-report=term-missing \
          --tb=short

    - name: Run integration tests
      run: |
        pytest tests/checker/ -v -m integration \
          --tb=short

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.10'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mypy black isort
        pip install -r requirements.txt || true

    - name: Check code formatting with black
      run: |
        black --check autocoder/checker/ tests/checker/ || true

    - name: Check import sorting with isort
      run: |
        isort --check-only autocoder/checker/ tests/checker/ || true

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 autocoder/checker/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 autocoder/checker/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || true

    - name: Type check with mypy
      run: |
        mypy autocoder/checker/ --ignore-missing-imports --no-strict-optional || true

  coverage-check:
    name: Coverage Check
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -r requirements.txt || true

    - name: Generate coverage report
      run: |
        pytest tests/checker/ \
          --cov=autocoder/checker \
          --cov-report=term-missing \
          --cov-report=html \
          --cov-fail-under=70 \
          -m "unit or integration"

    - name: Archive coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/
        retention-days: 30
